### Health
GET http://localhost:4000/health

# Example 200 response
# {
#   "status": "ok"
# }

### Register
POST http://localhost:4000/api/auth/register
Content-Type: application/json

{
  "email": "dev@example.com",
  "username": "devuser",
  "password": "Password123!"
}

# Example 201 response (cookies set via Set-Cookie headers)
# Status: 201 Created
# Set-Cookie: access_token=...; HttpOnly; Path=/; ...
# Set-Cookie: refresh_token=...; HttpOnly; Path=/api/auth; ...
# {
#   "user": {
#     "id": "67157f2d2a2d3fb8a0b9c111",
#     "email": "dev@example.com",
#     "username": "devuser",
#     "createdAt": "2025-10-11T06:35:00.123Z",
#     "updatedAt": "2025-10-11T06:35:00.123Z"
#   }
# }

# Example 400 response (validation)
# Status: 400 Bad Request
# {
#   "success": false,
#   "error": {
#     "type": "ValidationError",
#     "message": "Validation failed",
#     "fields": {
#       "password": "String must contain at least 8 character(s)"
#     }
#   }
# }

# Example 409 response (email taken)
# Status: 409 Conflict
# {
#   "success": false,
#   "error": { "type": "ConflictError", "message": "Email already in use" }
# }

### Login
POST http://localhost:4000/api/auth/login
Content-Type: application/json

{
  "email": "dev@example.com",
  "password": "Password123!"
}

# Example 200 response (cookies set via Set-Cookie headers)
# Status: 200 OK
# Set-Cookie: access_token=...; HttpOnly; Path=/; ...
# Set-Cookie: refresh_token=...; HttpOnly; Path=/api/auth; ...
# {
#   "user": {
#     "id": "67157f2d2a2d3fb8a0b9c111",
#     "email": "dev@example.com",
#     "username": "devuser",
#     "createdAt": "2025-10-11T06:35:00.123Z",
#     "updatedAt": "2025-10-11T06:35:00.123Z"
#   }
# }

# Example 401 response (invalid credentials)
# Status: 401 Unauthorized
# {
#   "success": false,
#   "error": { "type": "UnauthorizedError", "message": "Invalid credentials" }
# }

### Me
GET http://localhost:4000/api/auth/me

# Example 200 response
# Status: 200 OK
# {
#   "user": {
#     "id": "67157f2d2a2d3fb8a0b9c111",
#     "email": "dev@example.com",
#     "username": "devuser",
#     "createdAt": "2025-10-11T06:35:00.123Z",
#     "updatedAt": "2025-10-11T06:35:00.123Z"
#   }
# }

# Example 401 response (missing/expired access token)
# Status: 401 Unauthorized
# {
#   "success": false,
#   "error": { "type": "UnauthorizedError", "message": "Unauthorized" }
# }

### Refresh
POST http://localhost:4000/api/auth/refresh

# Example 200 response (cookies rotated via Set-Cookie)
# Status: 200 OK
# Set-Cookie: access_token=...; HttpOnly; Path=/; ...
# Set-Cookie: refresh_token=...; HttpOnly; Path=/api/auth; ...
# {
#   "ok": true
# }

# Example 401 response (no/invalid refresh token)
# Status: 401 Unauthorized
# {
#   "success": false,
#   "error": { "type": "UnauthorizedError", "message": "Missing refresh token" }
# }

### Logout
POST http://localhost:4000/api/auth/logout

# Example 200 response
# Status: 200 OK
# Set-Cookie: access_token=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Path=/; ...
# Set-Cookie: refresh_token=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Path=/api/auth; ...
# {
#   "ok": true
# }

# Example 429 response (rate limited on /api/auth)
# Status: 429 Too Many Requests
# {
#   "success": false,
#   "error": { "type": "TooManyRequestsError", "message": "Too many requests, please try again later." }
# }

### Problems - Create (requires auth)
POST http://localhost:4000/api/problems
Content-Type: application/json

{
  "title": "Two Sum",
  "descriptionMd": "# Two Sum\n\nGiven an array...",
  "difficulty": "easy",
  "tags": ["array", "hashmap"]
}

# Example 201 response
# {
#   "problem": {
#     "pid": 1,
#     "title": "Two Sum",
#     "descriptionMd": "# Two Sum\n\nGiven an array...",
#     "difficulty": "easy",
#     "tags": ["array", "hashmap"],
#     "createdAt": "2025-10-11T06:45:00.000Z",
#     "updatedAt": "2025-10-11T06:45:00.000Z"
#   }
# }

### Problems - List
GET http://localhost:4000/api/problems?page=1&limit=20

# Example 200 response
# {
#   "items": [
#     { "pid": 1, "title": "Two Sum", "difficulty": "easy", "tags": ["array"], "descriptionMd": "# Two Sum...", "createdAt": "...", "updatedAt": "..." }
#   ],
#   "page": 1,
#   "limit": 20,
#   "total": 1
# }

### Problems - Get by pid
GET http://localhost:4000/api/problems/1

# Example 200 response
# {
#   "problem": { "pid": 1, "title": "Two Sum", "descriptionMd": "# Two Sum...", "difficulty": "easy", "tags": ["array"], "createdAt": "...", "updatedAt": "..." }
# }

# Example 404 response
# {
#   "success": false,
#   "error": { "type": "NotFoundError", "message": "Problem not found" }
# }

### Problems - Update (requires auth)
PATCH http://localhost:4000/api/problems/1
Content-Type: application/json

{
  "title": "Two Sum (Updated)",
  "difficulty": "medium"
}

# Example 200 response
# {
#   "problem": { "pid": 1, "title": "Two Sum (Updated)", "descriptionMd": "# Two Sum...", "difficulty": "medium", "tags": ["array"], "createdAt": "...", "updatedAt": "..." }
# }

### Problems - Delete (requires auth)
DELETE http://localhost:4000/api/problems/1

# Example 204 response
# [empty body]

### Execute - Test
POST http://localhost:4000/api/execute/test
Content-Type: application/json

{
  "language": "javascript",
  "code": "console.log(require('fs').readFileSync(0,'utf8'))",
  "stdin": "hello world\n"
}

# Example 200 response
# {
#   "result": {
#     "stdout": "hello world\n",
#     "stderr": "",
#     "exitCode": 0,
#     "timedOut": false,
#     "durationMs": 25
#   }
# }

### Execute - Submit (requires auth, persists submission)
POST http://localhost:4000/api/execute/submit
Content-Type: application/json

{
  "pid": 1,
  "language": "javascript",
  "code": "const fs=require('fs');const input=fs.readFileSync(0,'utf8').trim();console.log(input)"
}

# Example 200 response
# {
#   "pid": 1,
#   "total": 3,
#   "passed": true,
#   "results": [
#     { "case": 1, "input": "1 2\n", "expected": "1 2", "stdout": "1 2\n", "stderr": "", "exitCode": 0, "timedOut": false, "pass": true, "durationMs": 20 },
#     { "case": 2, ... }
#   ]
# }

# Example 401 response (missing/expired access token)
# Status: 401 Unauthorized
# {
#   "success": false,
#   "error": { "type": "UnauthorizedError", "message": "Unauthorized" }
# }

### Execute - My submissions (requires auth)
GET http://localhost:4000/api/execute/my

# Example 200 response
# {
#   "submissions": [
#     {
#       "_id": "6716abcd1234ef5678901234",
#       "user": "67157f2d2a2d3fb8a0b9c111",
#       "problem": "6715800aa5b3e8d2d3c9fabc",
#       "pid": 1,
#       "language": "javascript",
#       "total": 3,
#       "passed": true,
#       "results": [
#         { "case": 1, "stdout": "1 2\n", "stderr": "", "exitCode": 0, "timedOut": false, "pass": true, "durationMs": 20 }
#       ],
#       "createdAt": "2025-10-12T07:20:00.000Z",
#       "updatedAt": "2025-10-12T07:20:00.000Z"
#     }
#   ]
# }

### Testcases - Bulk create (requires auth)
POST http://localhost:4000/api/testcases/bulk
Content-Type: application/json

{
  "pid": 1,
  "cases": [
    { "input": "2 3\n", "expectedOutput": "5" },
    { "input": "10 -4\n", "expectedOutput": "6" }
  ]
}

# Example 201 response
# {
#   "pid": 1,
#   "created": 2,
#   "cases": [
#     { "id": "67159b...", "isSample": false, "timeLimitMs": 2000 },
#     { "id": "67159b...", "isSample": false, "timeLimitMs": 2000 }
#   ]
# }
